"""Create a curated music library from a Strawberry or Clementine database."""
from __future__ import annotations

import asyncio
import logging
import os

from anyio import Path
import click

from .utils import create_library as do_create_library

__all__ = ('create_library',)

log = logging.getLogger(__name__)


@click.command()
@click.argument('directory',
                default=f'{os.getenv("HOME")}/import',
                nargs=1,
                type=click.Path(file_okay=False, path_type=Path, resolve_path=True, writable=True))
@click.option('--database',
              help='Path to the database file.',
              type=click.Path(file_okay=True, path_type=Path, dir_okay=False, resolve_path=True))
@click.option('--include-no-cover', help='Include files without embedded cover art.', is_flag=True)
@click.option('--no-si', help='Do not use SI units.', is_flag=True)
@click.option('--split-dir',
              help='Directory to store MP3 files generated by splitting them by their CUE file.',
              type=click.Path(file_okay=False, path_type=Path, resolve_path=True, writable=True))
@click.option('-m', '--max-size', default=32, help='Maximum size in GB.', type=int)
@click.option('-t', '--threshold', default=0.6, help='Rating threshold out of 1.', type=float)
def create_library(directory: Path,
                   split_dir: Path,
                   database: Path | None = None,
                   max_size: int = 32,
                   threshold: float = 0.6,
                   *,
                   include_no_cover: bool = False,
                   no_si: bool = True) -> None:
    """Create a curated music library from a Strawberry or Clementine database."""  # noqa: DOC501
    if directory == split_dir:
        log.error('Split CUE cache directory cannot be same as output directory.')
        raise click.Abort
    asyncio.run(
        do_create_library(directory,
                          split_dir,
                          database,
                          threshold,
                          max_size,
                          include_no_cover=include_no_cover,
                          use_si=not no_si))
